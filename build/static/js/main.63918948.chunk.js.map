{"version":3,"sources":["components/fieldMap/index.tsx","pages/index.tsx","utils/request.ts","pages sync /index/.(tsx)$","utils/helper.ts","pages/system/components/filter.tsx","components/tableLists/table.tsx","components/tableLists/header.tsx","components/tableLists/index.tsx","reducers/admin.ts","reducers/index.ts","layouts/main/menu.tsx","layouts/main/userSetting.tsx","layouts/main/header.tsx","layouts/main/container.tsx","layouts/main/noFound.tsx","layouts/main/content.tsx","layouts/main/index.tsx","layouts/login/index.tsx","App.tsx","serviceWorker.ts","index.tsx","pages/system/auth/setting.tsx","pages/system/auth/assignMenu.tsx","pages/system/auth/assignRequest.tsx","pages/system/auth/assignUserGroup.tsx","pages/system/auth/index.tsx","pages/system/menu/iconData.ts","pages/system/menu/iconSelect.tsx","pages/system/menu/setting.tsx","pages/system/menu/index.tsx","pages/system/userGroup/setting.tsx","pages/system/userGroup/assignUser.tsx","pages/system/userGroup/index.tsx","pages/system/request/setting.tsx","pages/system/request/index.tsx","pages/system/user/setting.tsx","pages/system/user/index.tsx","components/modalForm/index.tsx"],"names":["FieldMap","desc","this","props","children","map","forEach","item","String","value","valueField","descField","React","PureComponent","defaultProps","Index","setTitle","config","to","Component","request","action","_type","_action","_data","_tipSuccess","_tipError","_dataType","_contentType","_success","undefined","_error","_complete","dataType","contentType","data","success","error","complete","execute","type","nprogress","start","url","method","toUpperCase","headers","responseType","_","indexOf","params","qs","stringify","axios","then","response","catch","e","http","actionUrl","tipSuccess","tipError","status","notification","message","description","info","duration","requestSuccessHandle","done","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports","key","process","getToken","localStorage","getItem","setToken","token","setItem","clearToken","removeItem","query","push","encodeURIComponent","length","join","serverUrl","getPages","route","path","component","routeComponent","require","fileName","index","str","char","replace","RegExp","default","title","document","menuSort","menus","m","cloneDeep","sort","item1","item2","Filter","state","keyword","form","getFieldsValue","hidden","name","getFieldDecorator","initialValue","layout","style","display","Item","placeholder","Form","create","Table","lists","total","page","render","pageSize","nextProps","nextState","setState","load","hiddenPage","offset","change","listsDarse","update","get","pagination","defaultPageSize","current","showSizeChanger","pageSizeOptions","showQuickJumper","showTotal","onChange","bind","onShowSizeChange","dataSource","rowKey","bordered","Header","node","Content","right","Sider","background","lineHeight","textAlign","marginBottom","TableLists","tableRef","filterRef","reload","filter","filterProps","wrappedComponentRef","ref","onClick","stateDefault","user","allUser","menu","auth","userGroup","currentMenu","currentMenus","combineReducers","admin","i","getParent","parentId","parent","reverse","Menu","theme","mode","defaultOpenKeys","toString","defaultSelectedKeys","color","SubMenu","connect","UserSetting","labelCol","span","wrapperCol","label","rules","required","userSetting","logout","modalForm","onSuccess","initialize","padding","className","collapsed","toggle","float","marginRight","overlay","dispatch","Container","updateCurrentMenu","location","withRouter","NoFound","margin","minHeight","exact","Layout","Main","trigger","collapsible","fontWeight","Login","preventDefault","validateFields","err","values","post","onSubmit","handleSubmit","prefix","htmlType","block","width","height","position","top","left","backgroundSize","justify","marginTop","App","removeLoading","querySelector","remove","isLogin","Boolean","window","hostname","match","ReactDOM","locale","zhCN","store","createStore","reducers","getElementById","navigator","serviceWorker","ready","registration","unregister","Setting","TextArea","rows","TreeNode","Tree","AssignMenu","menuIdsTree","r","parseInt","checked","Set","getParentIds","delete","Array","from","pid","tree","menuIds","addParentChecked","Modal","confirm","onOk","onCancel","checkable","defaultExpandedKeys","checkedKeys","onCheck","Column","AssignRequest","assign","noAssigntableRef","row","requestId","noAssign","dataIndex","text","size","AssignUserGroup","userGroupId","UserGroup","currentAssignId","currentAssignType","set","showSuccessTip","icon","add","edit","destroyOnClose","onClose","assignClose","visible","IconSelect","close","iconSelectVisible","placement","closable","iconData","select","fontSize","open","updateIcon","settingRef","parent_id","op","brother","newLists","extra","cancel","save","selectable","cid","currentIndex","level","treeContent","disabled","gutter","setting","AssignUser","userId","assignUser","content","assignUserClose","requestType","getFieldValue","marked","dangerouslySetInnerHTML","__html","Option","currentTypeDescription","Request","copy","userStatus","User","v","n","username","ModalBlock","formRef","afterClose","onFailure","F","okText","formProps","options","div","createElement","body","appendChild","unmountComponentAtNode","parentNode","removeChild"],"mappings":"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K,KAAK/J,MAC/ByU,QAA0C,YAAjCzU,KAAKwH,MAAMwM,mBAEpB,kBAAC,EAAD,CAAe1P,GAAItE,KAAKwH,MAAMuM,mBAElC,kBAAC,IAAD,CACIO,gBAAc,EACd5E,MAAO,IACP5I,MAAM,iCACNyN,QAASvU,KAAKwU,YAAYzK,KAAK/J,MAC/ByU,QAA0C,cAAjCzU,KAAKwH,MAAMwM,mBAEpB,kBAAC,EAAD,CAAiB1P,GAAItE,KAAKwH,MAAMuM,mBAEpC,kBAAC,IAAD,CACIO,gBAAc,EACd5E,MAAO,IACP5I,MAAM,2BACNyN,QAASvU,KAAKwU,YAAYzK,KAAK/J,MAC/ByU,QAA0C,SAAjCzU,KAAKwH,MAAMwM,mBAEpB,kBAAC,EAAD,CAAY1P,GAAItE,KAAKwH,MAAMuM,wB,GA5GvBrT,IAAMO,WAqHf6S,a,wNC6OA7R,EA/WQ,CACnB,gBACA,eACA,gBACA,eACA,SACA,aACA,OACA,KACA,OACA,QACA,WACA,aACA,aACA,cACA,YACA,cACA,cACA,eACA,eACA,cACA,gBACA,iBACA,qBACA,wBACA,wBACA,UACA,WACA,WACA,QACA,UACA,OACA,YACA,aACA,WACA,aACA,aACA,cACA,cACA,YACA,cACA,cACA,eACA,QACA,SACA,YACA,cACA,gBACA,oBACA,eACA,eACA,cACA,eACA,aACA,kBACA,aACA,WACA,YACA,oBACA,qBACA,gBACA,iBACA,aACA,kBACA,WACA,kBACA,OACA,cACA,QACA,eACA,QACA,eACA,cACA,eACA,OACA,cACA,cACA,qBACA,QACA,eACA,eACA,QACA,eACA,eACA,eACA,UACA,eACA,OACA,OACA,OACA,OACA,UACA,SACA,WACA,OACA,YACA,eACA,aACA,cACA,YACA,OACA,SACA,YACA,gBACA,OACA,OACA,UACA,WACA,cACA,YACA,cACA,OACA,aACA,iBACA,kBACA,OACA,eACA,iBACA,iBACA,eACA,gBACA,aACA,YACA,YACA,YACA,aACA,cACA,WACA,OACA,OACA,QACA,WACA,OACA,UACA,UACA,QACA,UACA,KACA,SACA,SACA,cACA,WACA,eACA,eACA,gBACA,QACA,QACA,UACA,SACA,UACA,gBACA,SACA,QACA,KACA,kBACA,SACA,SACA,WACA,cACA,UACA,WACA,UACA,eACA,SACA,SACA,iBACA,SACA,aACA,YACA,SACA,QACA,QACA,eACA,UACA,iBACA,WACA,kBACA,YACA,QACA,UACA,QACA,SACA,SACA,eACA,QACA,MACA,WACA,QACA,OACA,OACA,OACA,MACA,OACA,aACA,QACA,WACA,SACA,MACA,YACA,QACA,OACA,UACA,WACA,YACA,UACA,cACA,QACA,mBACA,YACA,WACA,UACA,cACA,aACA,gBACA,MACA,WACA,aACA,mBACA,aACA,gBACA,WACA,WACA,YACA,eACA,YACA,WACA,OACA,SACA,OACA,OACA,aACA,SACA,cACA,QACA,cACA,OACA,MACA,QACA,OACA,YACA,SACA,YACA,cACA,SACA,OACA,OACA,OACA,eACA,MACA,UACA,SACA,gBACA,aACA,eACA,QACA,UACA,cACA,UACA,UACA,UACA,UACA,kBACA,OACA,iBACA,eACA,OACA,SACA,qBACA,OACA,WACA,gBACA,UACA,OACA,WACA,OACA,QACA,QACA,OACA,WACA,SACA,MACA,OACA,OACA,cACA,SACA,SACA,MACA,eACA,SACA,YACA,QACA,UACA,OACA,QACA,SACA,WACA,KACA,iBACA,eACA,aACA,eACA,UACA,SACA,YACA,kBACA,UACA,aACA,SACA,WACA,WACA,OACA,YACA,SACA,YACA,WACA,eACA,YACA,cACA,OACA,UACA,SACA,OACA,UACA,SACA,QACA,MACA,SACA,OACA,OACA,qBACA,UACA,MACA,OACA,UACA,OACA,SACA,aACA,aACA,QACA,WACA,eACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,QACA,YACA,gBACA,WACA,OACA,QACA,OACA,SACA,YACA,cACA,SACA,WACA,cACA,gBACA,OACA,mBACA,OACA,SC7RWyS,E,YA7DX,WAAYzU,GAAQ,IAAD,8BACf,4CAAMA,KAWV0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","file":"static/js/main.63918948.chunk.js","sourcesContent":["import React from 'react';\n\ninterface props {\n    map: any[]\n    value: number | string\n    valueField?: string\n    descField?: string\n}\n\nclass FieldMap extends React.PureComponent<props> {\n    static defaultProps = {\n        valueField: \"v\",\n        descField: \"n\",\n    }\n\n    render() {\n        let desc = this.props.children\n        this.props.map.forEach(item => {\n            if (String(this.props.value) === String(item[this.props.valueField || \"v\"])) {\n                desc = <span>{String(item[this.props.descField || \"n\"])}</span>\n            }\n        })\n        return desc\n    }\n}\n\nexport default FieldMap\n","import React from 'react';\nimport {Redirect} from 'react-router';\nimport {config, setTitle} from \"src/utils/helper\"\nclass Index extends React.Component {\n    constructor(props){\n        super(props)\n        setTitle(\"默认首页\")\n    }\n    render() {\n        if (config('INDEX_URL') === \"/\"){\n            return (\n                \"默认首页 可以.env文件中配置首页地址\"\n            )\n        }\n        return (\n            <Redirect to={config(\"INDEX_URL\")} />\n        )\n    };\n}\nexport default Index;\n","import axios, {AxiosRequestConfig} from 'axios'\nimport qs from 'qs'\nimport nprogress from 'nprogress'\nimport {notification} from 'antd';\nimport {actionUrl} from './helper'\nimport _ from 'lodash'\n\nexport interface Response {\n    status: string,\n    info: string,\n    data: any\n}\n\ninterface ResponseHandleFunc {\n    (response: Response): void\n}\n\nexport const http = function ({type, data, dataType, contentType, url, success, error, complete}) {\n    type = (type || 'get').toUpperCase()\n    let config: AxiosRequestConfig = {\n        method: type || 'get',\n        url: url,\n        headers: {'content-type': contentType || \"application/x-www-form-urlencoded\"},\n        responseType: dataType || 'json'\n    }\n    if (_.indexOf(['POST', 'PUT', 'PATCH'], type) === -1) {\n        config.params = data\n    } else {\n        config.data = qs.stringify(data)\n    }\n    return axios(config).then((response) => {\n        complete && complete()\n        success && success(response.data)\n    }).catch((e) => {\n        complete && complete()\n        error && error(e)\n    })\n}\n\nconst requestSuccessHandle = function (response: Response, tipSuccess: boolean, tipError: boolean, success: ResponseHandleFunc | undefined, error: ResponseHandleFunc | undefined) {\n    if (response.status === 'success') {\n        if (tipSuccess) {\n            notification.success({\n                message: '操作提示',\n                description: response.info,\n            });\n        }\n        success && success(response)\n    } else {\n        if (tipError) {\n            notification.error({\n                message: '错误提示',\n                description: response.info,\n                duration: 10\n            });\n        }\n        error && error(response)\n    }\n}\n\nclass request {\n    private _type: string = 'get'\n    private readonly _action: string = ''\n    private _data: object = {}\n    private _tipSuccess: boolean = false\n    private _tipError: boolean = true\n    private _dataType: string = 'json'\n    private _contentType: string = 'application/x-www-form-urlencoded'\n    private _success: ResponseHandleFunc | undefined = undefined\n    private _error: ResponseHandleFunc | undefined = undefined\n    private _complete = () => {\n    }\n\n    constructor(action: string) {\n        this._action = action\n    }\n\n    dataType(dataType: string) {\n        this._dataType = dataType\n        return this\n    }\n\n    contentType(contentType: string) {\n        this._contentType = contentType\n        return this\n    }\n\n    data(data: object) {\n        this._data = {...this._data, ...data}\n        return this\n    }\n\n    showSuccessTip() {\n        this._tipSuccess = true\n        return this\n    }\n\n    hideErrorTip() {\n        this._tipError = false\n        return this\n    }\n\n    success(success: ResponseHandleFunc) {\n        this._success = success\n        return this\n    }\n\n    error(error: ResponseHandleFunc) {\n        this._error = error\n        return this\n    }\n\n    complete(complete) {\n        this._complete = complete\n        return this\n    }\n\n    get() {\n        return this.execute('get')\n    }\n\n    post() {\n        return this.execute('post')\n    }\n\n    execute(type: string) {\n        this._type = type\n        nprogress.start()\n        return http({\n            type: this._type,\n            dataType: this._dataType,\n            contentType: this._contentType,\n            data: this._data,\n            url: actionUrl(this._action),\n            success: (response) => {\n                requestSuccessHandle(\n                    response,\n                    this._tipSuccess,\n                    this._tipError,\n                    this._success,\n                    this._error\n                )\n            },\n            error: () => {\n                notification.error({message: '对不起您请求的数据不存在或者返回异常', duration: 5})\n            },\n            complete: () => {\n                nprogress.done()\n                this['_complete'] && this['_complete']()\n            }\n        })\n    }\n}\n\nexport default (action) => new request(action)","var map = {\n\t\"./index.tsx\": 161,\n\t\"./system/auth/index.tsx\": 428,\n\t\"./system/menu/index.tsx\": 429,\n\t\"./system/request/index.tsx\": 431,\n\t\"./system/user/index.tsx\": 432,\n\t\"./system/userGroup/index.tsx\": 430\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 238;","import localStorage from 'localStorage'\nimport _ from \"lodash\";\nimport React from \"react\";\nimport Index from \"src/pages/index\";\n\nexport const trim = function (str, char, type) {\n    if (char) {\n        if (type === 'left') {\n            return str.replace(new RegExp('^\\\\' + char + '+', 'g'), '')\n        } else if (type === 'right') {\n            return str.replace(new RegExp('\\\\' + char + '+$', 'g'), '')\n        }\n        return str.replace(new RegExp('^\\\\' + char + '+|\\\\' + char + '+$', 'g'), '')\n    }\n    return str.replace(/^\\s+|\\s+$/g, '')\n}\n\n// 配置获取\nexport const config = function (key: string): string {\n    // @ts-ignore\n    return process.env['REACT_APP_' + key]\n}\n\nexport const serverUrl = function (data = {}) {\n    let query: string[] = []\n    Object.keys(data).forEach((item: string) => {\n        query.push(item + '=' + encodeURIComponent(data[item]))\n    })\n    return config('API_URL_PREFIX') + (query.length > 0 ? ('?' + query.join('&')) : '')\n}\n\nexport const getToken = () => {\n    return localStorage.getItem(config('ADMIN_TOKEN_NAME'))\n}\nexport const setToken = (token: string) => {\n    if (token) {\n        localStorage.setItem(config('ADMIN_TOKEN_NAME'), token)\n    }\n}\n\nexport const clearToken = () => {\n    localStorage.removeItem(config('ADMIN_TOKEN_NAME'))\n}\n\nexport const actionUrl = function (action) {\n    let data = {}\n    data[config('API_ACTION_NAME')] = action\n    if (getToken()) {\n        data[config('API_TOKEN_NAME')] = getToken()\n    }\n    return serverUrl(data)\n}\n\nexport const getPages = () => {\n    let route: { path: string, component: React.ComponentType }[] = [\n        {path: \"/\", component: Index}\n    ]\n    const routeComponent = require.context(\n        'src/pages',\n        true,\n        /index\\.(tsx)$/\n    )\n    routeComponent.keys().forEach((fileName, index) => {\n        // 过滤组件\n        if (fileName.indexOf('components/') !== -1 || fileName === \"./index.tsx\") {\n            return;\n        }\n        const path: string = \"/\" + trim(fileName.replace(/^\\.\\/(.*)\\/index\\.\\w+$/, '$1'), '/', 'left');\n        const component: React.ComponentType<any> = routeComponent(fileName).default\n        route.push({path, component})\n    });\n    return route\n}\n\nexport const setTitle = (title: string) => {\n    document.title = config('SITE_TITLE_TPL').replace(/{title}/g, title);\n};\n\n// 菜单排序\nexport const menuSort = function (menus) {\n    let m = _.cloneDeep(menus)\n    m.sort((item1, item2) => {\n        if (item1.sort < item2.sort) {\n            return -1\n        }\n        if (item1.sort === item2.sort) {\n            return item1.id < item2.id ? -1 : 1\n        }\n        return 1\n    })\n    return m;\n}","import React from 'react';\nimport {Form, Input} from \"antd\";\nimport {FormComponentProps} from \"antd/es/form\";\nimport {filterInterface} from \"src/components/tableLists\";\n\ninterface props extends FormComponentProps {\n    hidden?:{name:string,value:any}[]\n}\n\nclass Filter extends React.Component<props> implements filterInterface {\n    state = {\n        keyword: \"\",\n    }\n\n    getFieldsValue() {\n        return this.props.form.getFieldsValue()\n    }\n\n    hidden(){\n        if (this.props.hidden){\n            return this.props.hidden.map(({name,value})=>(\n                this.props.form.getFieldDecorator(name, {initialValue: value})(<Input type=\"hidden\" key={name}/>)\n            ))\n        }\n        return \"\"\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form layout=\"inline\" style={{display: \"inline-block\"}}>\n                {this.hidden()}\n                <Form.Item>\n                    {getFieldDecorator('keyword', {initialValue: this.state.keyword})(\n                        <Input placeholder=\"搜索关键字\"/>\n                    )}\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create<props>()(Filter)\n","import React from 'react';\nimport {Table as AntdTable} from 'antd';\nimport request from \"src/utils/request\";\n\ninterface props {\n    query()\n\n    update?: ((response, page?) => void)\n    action: string\n    rowKey?: string\n    pageSize?: number\n    hiddenPage?: boolean\n\n    listsDarse?: (response) => any[]\n}\n\ninterface state {\n    total: number\n    page: number\n    lists: any[],\n    render: number\n    pageSize: number\n}\n\n\nclass Table extends React.Component<props, state> {\n\n    static defaultProps = {\n        pageSize: 20,\n        rowKey: \"id\",\n        listsDarse: ({data: {lists}}) => lists\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            lists: [],\n            total: 0,\n            page: 1,\n            render: 0,\n            pageSize: this.props.pageSize || 20,\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.state.render !== nextState.render\n    }\n\n    onChange(page) {\n        this.setState({page}, () => {\n            this.load()\n        })\n    }\n\n    onShowSizeChange(page, pageSize) {\n        this.setState({page: 1, pageSize}, () => {\n            this.load()\n        })\n    }\n\n    reload() {\n        this.setState({page: 1}, () => {\n            this.load()\n        })\n    }\n\n    load() {\n        let query = this.props.query() || {}\n        if (!this.props.hiddenPage) {\n            query = {\n                ...query,\n                offset: (this.state.page - 1) * this.state.pageSize,\n                pageSize:this.state.pageSize\n            }\n        }\n        let req = request(this.props.action).data(query)\n        req.success((response) => {\n            this.setState((state) => {\n                let change = {}\n                if (response.data['total']) {\n                    change[\"total\"] = response.data['total']\n                }\n                change[\"lists\"] = this.props.listsDarse ? this.props.listsDarse(response) : []\n                return {render: state.render + 1, ...change}\n            }, () => {\n                this.props.update && this.props.update(response, this.state.page)\n            })\n        }).get()\n    }\n\n    render() {\n        const pagination = !this.props.hiddenPage ? {\n            defaultPageSize: this.props.pageSize,\n            current: this.state.page,\n            total: this.state.total,\n            showSizeChanger: true,\n            pageSizeOptions: ['5', '10', '20', '30', '50', '100'],\n            showQuickJumper: true,\n            showTotal: total => `总计 ${total} 条`,\n            onChange: this.onChange.bind(this),\n            onShowSizeChange: this.onShowSizeChange.bind(this)\n        } : false\n        return (\n            <AntdTable dataSource={this.state.lists}\n                       pagination={pagination}\n                       rowKey={this.props.rowKey}\n                       bordered\n            >\n                {this.props.children}\n            </AntdTable>\n        )\n    }\n}\n\nexport default Table\n","import React from 'react';\nimport {Layout} from \"antd\";\n\ninterface props {\n    right?: React.ReactNode\n}\n\nclass Header extends React.PureComponent<props> {\n\n    render() {\n        let node:any[] = []\n        if(this.props.children){\n            node.push(\n                <Layout.Content key=\"content\">\n                    {this.props.children}\n                </Layout.Content>\n            )\n        }\n        if(this.props.right){\n            node.push(\n                <Layout.Sider key=\"sider\" style={{background: \"#FFF\",lineHeight:\"40px\",textAlign:\"right\"}}>\n                    {this.props.right}\n                </Layout.Sider>\n            )\n        }\n        if (node.length > 0){\n            return (\n                <Layout style={{background: \"#FFF\",marginBottom:\"10px\"}}>{node}</Layout>\n            )\n        }\n        return \"\"\n    }\n}\n\nexport default Header\n","import React from 'react';\nimport Table from './table';\nimport Header from './header';\nimport {Button, Form} from \"antd\";\n\ninterface props {\n    update?: ((response, page?) => void)\n    action: string\n    rowKey?: string\n    pageSize?: number\n    right?: React.ReactNode\n    filterProps?: object\n    filter?: React.ComponentType<any>\n    hiddenPage?:boolean\n    listsDarse?: (response) => any[] // 分页数据解析方法\n}\n\nclass TableLists extends React.Component<props> {\n    static defaultProps = {\n        pageSize: 20,\n        rowKey: \"id\",\n        right: null,\n        filter: null,\n        filterProps: {},\n        hiddenPage:false,\n        listsDarse:({data: {lists}}) => lists\n    }\n\n    tableRef: any = null\n    filterRef: any = null\n\n    componentDidMount(): void {\n        this.load()\n    }\n\n    load() {\n        this.tableRef.reload()\n    }\n\n    query() {\n        return this.filterRef ? this.filterRef.getFieldsValue() : {}\n    }\n\n    render() {\n        if (this.props.filter) {\n            const Filter = this.props.filter\n            return (\n                <div>\n                    <Header right={this.props.right}>\n                        <Filter {...this.props.filterProps} wrappedComponentRef={ref => {\n                                this.filterRef = ref\n                        }}/>\n                        <Form layout=\"inline\" style={{display:\"inline-block\"}}>\n                            <Form.Item>\n                                <Button type=\"primary\" onClick={this.load.bind(this)}>查询</Button>\n                            </Form.Item>\n                        </Form>\n                    </Header>\n                    <Table\n                        ref={ref => {\n                            this.tableRef = ref\n                        }}\n                        action={this.props.action}\n                        query={this.query.bind(this)}\n                        update={this.props.update}\n                        rowKey={this.props.rowKey}\n                        pageSize={this.props.pageSize}\n                        hiddenPage={this.props.hiddenPage}\n                        listsDarse={this.props.listsDarse}\n                    >\n                        {this.props.children}\n                    </Table>\n                </div>\n            )\n        }\n        return (\n            <div>\n                <Header right={this.props.right}/>\n                <Table\n                    ref={ref => {\n                        this.tableRef = ref\n                    }}\n                    action={this.props.action}\n                    query={this.query.bind(this)}\n                    update={this.props.update}\n                    rowKey={this.props.rowKey}\n                    pageSize={this.props.pageSize}\n                    hiddenPage={this.props.hiddenPage}\n                    listsDarse={this.props.listsDarse}\n                >\n                    {this.props.children}\n                </Table>\n            </div>\n        )\n    }\n}\n\n// 过滤器接口\nexport interface filterInterface {\n    getFieldsValue(): object\n}\n\nexport default TableLists","import {setTitle} from \"../utils/helper\";\n\nconst stateDefault = {\n    user: {},\n    allUser: [],\n    menu: [],\n    request: [],\n    auth: [],\n    userGroup: [],\n    currentMenu: {},\n    currentMenus: [],\n}\nexport const reducer = (state = stateDefault, action) => {\n    switch (action.type) {\n        case \"ADMIN_USER\":\n            return {...state, user: action.data}\n        case \"ADMIN_ALLUSER\":\n            return {...state, allUser: action.data}\n        case \"ADMIN_MENU\":\n            return {...state, menu: action.data}\n        case \"ADMIN_REQUEST\":\n            return {...state, request: action.data}\n        case \"ADMIN_AUTH\":\n            return {...state, auth: action.data}\n        case \"ADMIN_USERGROUP\":\n            return {...state, userGroup: action.data}\n        case \"ADMIN_CURRENT_MENU\":\n            let currentMenu = {}\n            let currentMenus: object[] = []\n            for (let i = 0; i < state.menu.length; i++) {\n                const item = state.menu[i]\n                if (item['url'] === action.data) {\n                    currentMenu = item\n                    setTitle(item['name'])\n                }\n            }\n\n            const getParent = function (parentId) {\n                for (let i = 0; i < state.menu.length; i++) {\n                    if (state.menu[i]['id'] === parentId) {\n                        return state.menu[i]\n                    }\n                }\n                return {}\n            }\n\n            if (currentMenu['id']) {\n                currentMenus.push(currentMenu)\n                let parentId = currentMenu['parent_id']\n                while (parentId) {\n                    const parent = getParent(parentId)\n                    parentId = parent['parent_id']\n                    if (parent['id']) {\n                        currentMenus.push(parent)\n                    }\n                }\n            }\n            return {...state, currentMenu: currentMenu, currentMenus: currentMenus.reverse()}\n        case \"ADMIN_ALL\":\n            return {...state, ...action.data}\n    }\n    return state\n}\n\nexport const action = {\n    user(data = {}) {\n        return {type: \"ADMIN_USER\", data}\n    },\n    allUser(data) {\n        return {type: \"ADMIN_ALLUSER\", data}\n    },\n    menu(data) {\n        return {type: \"ADMIN_MENU\", data}\n    },\n    request(data) {\n        return {type: \"ADMIN_REQUEST\", data}\n    },\n    auth(data) {\n        return {type: \"ADMIN_AUTH\", data}\n    },\n    userGroup(data) {\n        return {type: \"ADMIN_USERGROUP\", data}\n    },\n    currentMenu(data) {\n        return {type: \"ADMIN_CURRENT_MENU\", data}\n    },\n    logout() {\n        return {\n            type: \"ADMIN_ALL\", data: {\n                user: {},\n                allUser: [],\n                menu: [],\n                request: [],\n                auth: [],\n                userGroup: [],\n            }\n        }\n    },\n    all(data) {\n        return {type: \"ADMIN_ALL\", data}\n    }\n}\n","import {combineReducers} from \"redux\";\nimport {reducer as admin} from \"./admin\";\n\nexport default combineReducers({\n    admin\n})","import React from 'react';\nimport {menuSort} from \"src/utils/helper\";\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {Menu as MenuBlock, Icon} from 'antd';\n\ninterface props {\n    menu: object[]\n    currentMenu:object,\n    currentMenus:object[]\n}\n\nclass Menu extends React.Component<props> {\n    render() {\n        return (\n            <MenuBlock\n                theme=\"dark\"\n                mode=\"inline\"\n                defaultOpenKeys={\n                    this.props.currentMenus.map((item)=>{\n                        return item['id'].toString()\n                    })\n                }\n                defaultSelectedKeys={\n                    this.props.currentMenu['id'] ? [this.props.currentMenu['id'].toString()] : []\n                }\n            >\n                {this.lists(0)}\n            </MenuBlock>\n        )\n    }\n\n    lists(parentId: number) {\n        let menu: React.ReactNode[] = []\n        for (let i in this.props.menu) {\n            const item = this.props.menu[i]\n            if (parentId === item[\"parent_id\"]) {\n                if (!item['url']) {\n                    menu.push(\n                        <MenuBlock.SubMenu\n                            title={\n                                <span>\n                                    <Icon type={item['icon'] ? item['icon'] : \"unordered-list\"}/>\n                                    <span>{item['name']}</span>\n                                </span>\n                            }\n                            key={item['id']}\n                        >\n                            {this.lists(item['id'])}\n                        </MenuBlock.SubMenu>\n                    )\n                } else {\n                    menu.push(\n                        <MenuBlock.Item key={item['id']}>\n                                <Link style={{color: \"inherit\"}} to={item['url']}>\n                                    <Icon type={item['icon'] ? item['icon'] : \"unordered-list\"}/>\n                                    {item['name']}\n                                </Link>\n                        </MenuBlock.Item>\n                    )\n                }\n            }\n        }\n        return menu\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        menu: menuSort(state.admin.menu),\n        currentMenu: state.admin.currentMenu,\n        currentMenus: state.admin.currentMenus,\n    };\n}\n\nexport default connect(mapStateToProps)(Menu)","import React from 'react';\nimport {FormComponentProps} from \"antd/es/form\";\nimport {Form, Input} from \"antd\";\n\ninterface props extends FormComponentProps {\n    default: object\n}\n\nclass UserSetting extends React.Component<props> {\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form labelCol={{span: 4}} wrapperCol={{span: 20}}>\n                <Form.Item label=\"用户名\">\n                    {\n                        getFieldDecorator(\n                            'username', {rules: [{required: true}], initialValue: this.props.default['username']}\n                        )(<Input/>)\n                    }\n                </Form.Item>\n                <Form.Item label=\"密码\">\n                    {\n                        getFieldDecorator('password')(<Input type=\"password\"/>)\n                    }\n                </Form.Item>\n                <Form.Item label=\"重复密码\">\n                    {\n                        getFieldDecorator('repeatPassword')(<Input type=\"password\"/>)\n                    }\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\nexport default UserSetting\n","import React from 'react';\nimport {connect} from 'react-redux'\nimport {clearToken} from 'src/utils/helper'\nimport {Layout, Icon, Breadcrumb, Dropdown, Menu, Button} from 'antd';\nimport {action} from \"src/reducers/admin\";\nimport modalForm from \"src/components/modalForm\";\nimport UserSetting from \"./userSetting\";\nimport request from \"../../utils/request\";\n\ninterface props {\n    user: object\n    currentMenus: object[]\n    collapsed: boolean\n\n    toggle(collapsed)\n\n    initialize(data)\n\n    logout()\n}\n\nclass Header extends React.Component<props> {\n    menu() {\n        return (\n            <Menu>\n                <Menu.Item key=\"0\">\n                    <Button type=\"link\" onClick={this.userSetting.bind(this)}>个人设置</Button>\n                </Menu.Item>\n                <Menu.Item key=\"1\">\n                    <Button type=\"link\" onClick={this.logout.bind(this)}>退出</Button>\n                </Menu.Item>\n            </Menu>\n        )\n    }\n\n    userSetting() {\n        modalForm(\n            \"/current/user/setting\",\n            UserSetting,\n            {\n                default: this.props.user\n            },\n            {\n                title: \"个人设置\",\n                onSuccess: () => {\n                    return request(\"/load\").success(response => {\n                        this.props.initialize(response.data)\n                    }).get()\n                }\n            }\n        )\n    }\n\n    logout() {\n        clearToken()\n        this.props.logout()\n    }\n\n    render() {\n        return (\n            <Layout.Header style={{background: '#fff', padding: 0}}>\n                <Icon\n                    className=\"trigger\"\n                    type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\n                    onClick={this.props.toggle}\n                />\n                <Breadcrumb style={{display: \"inline-block\"}}>\n                    {this.props.currentMenus.map(item => {\n                        return <Breadcrumb.Item key={item['id']}>{item['name']}</Breadcrumb.Item>\n                    })}\n                </Breadcrumb>\n                <div style={{float: \"right\", marginRight: \"12px\"}}>\n                    <Dropdown overlay={this.menu()}>\n                        <Button type=\"link\" className=\"ant-dropdown-link\">{this.props.user['username']} <Icon\n                            type=\"down\"/></Button>\n                    </Dropdown>\n                </div>\n            </Layout.Header>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.admin.user,\n        currentMenus: state.admin.currentMenus,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logout: () => {\n            dispatch(action.logout())\n        },\n        initialize: (data) => {\n            dispatch(action.all(data))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React from \"react\";\nimport {connect} from 'react-redux'\nimport {action} from \"src/reducers/admin\";\nimport {withRouter} from \"react-router\";\n\ninterface props {\n    updateCurrentMenu(data)\n    location:object\n}\n\nclass Container extends React.Component<props> {\n    constructor(props) {\n        super(props)\n        this.props.updateCurrentMenu(this.props.location['pathname'])\n    }\n\n    render() {\n        return this.props.children\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateCurrentMenu: (data) => {\n            dispatch(action.currentMenu(data))\n        }\n    }\n}\n\nexport default withRouter(connect(null,mapDispatchToProps)(Container))","import React from \"react\";\nimport {connect} from 'react-redux'\nimport {withRouter} from \"react-router\";\nimport {action} from \"src/reducers/admin\";\n\ninterface props {\n    location: object\n\n    updateCurrentMenu(data)\n}\n\nclass NoFound extends React.Component<props> {\n    render() {\n        this.props.updateCurrentMenu(this.props.location['pathname'])\n        return (\n            \"未找到页面组件(\" + this.props.location['pathname'] + \")\"\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateCurrentMenu: (data) => {\n            dispatch(action.currentMenu(data))\n        }\n    }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(NoFound))","import React from 'react';\nimport {Route, Switch} from 'react-router-dom'\nimport {Layout} from 'antd';\nimport {getPages} from \"src/utils/helper\";\nimport Container from \"./container\"\nimport NoFound from './noFound';\n\nclass Content extends React.Component {\n    render() {\n        return (\n            <Layout.Content\n                style={{\n                    margin: \"12px 12px 0\",\n                    padding: \"12px\",\n                    background: '#fff',\n                    minHeight: 280,\n                }}\n            >\n                <Switch>\n                    {\n                        getPages().map(({path, component}, index) => {\n                            const Component = component\n                            return (\n                                <Route exact path={path} key={index}>\n                                    <Container>\n                                        <Component/>\n                                    </Container>\n                                </Route>\n                            )\n                        })\n                    }\n                    <Route>\n                        <NoFound/>\n                    </Route>\n                </Switch>\n            </Layout.Content>\n        )\n    }\n}\n\nexport default Content\n","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {Layout} from 'antd';\nimport \"./style.css\"\nimport {config} from \"src/utils/helper\";\nimport Menu from './menu';\nimport Header from './header';\nimport Content from './content';\nimport {action} from \"src/reducers/admin\";\n\nconst {Sider} = Layout;\n\ninterface props {\n    updateCurrentMenu(data)\n\n    location: object\n}\n\nclass Main extends React.Component<props> {\n    state = {\n        collapsed: false,\n    };\n\n    constructor(props) {\n        super(props)\n        this.props.updateCurrentMenu(this.props.location['pathname'])\n    }\n\n    toggle() {\n        this.setState({collapsed: !this.state.collapsed});\n    };\n\n    render() {\n        return (\n            <div className=\"admin-system-layout\">\n                <Layout style={{minHeight: \"100vh\"}}>\n                    <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n                        <div className=\"logo\">\n                            <Link to=\"/\" style={{\n                                display: \"block\",\n                                textAlign: \"center\",\n                                lineHeight: \"32px\",\n                                color: \"white\",\n                                fontWeight: 500,\n                            }}>{config(\"SITE_NAME\")}</Link>\n                        </div>\n                        <Menu/>\n                    </Sider>\n                    <Layout>\n                        <Header collapsed={this.state.collapsed} toggle={this.toggle.bind(this)}/>\n                        <Content/>\n                    </Layout>\n                </Layout>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateCurrentMenu: (data) => {\n            dispatch(action.currentMenu(data))\n        }\n    }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(Main))\n","import React from 'react';\nimport {Form, Icon, Input, Button, Card, Row, Col} from 'antd';\nimport {FormComponentProps} from 'antd/es/form';\nimport request from \"src/utils/request\"\nimport {setToken,setTitle} from \"src/utils/helper\"\nimport {action} from \"src/reducers/admin\";\nimport {connect} from 'react-redux'\n\ninterface props extends FormComponentProps {\n    initialize(data)\n}\n\nclass Login extends React.Component<props> {\n\n    constructor(props){\n        super(props)\n        setTitle(\"登录\")\n    }\n\n    handleSubmit (e){\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                request(\"/login\").data(values).success((response) => {\n                    setToken(response.data.token)\n                    return request(\"/load\").success(response => {\n                        this.props.initialize(response.data)\n                    }).get()\n                }).post()\n            }\n        });\n    };\n\n    form() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit.bind(this)}>\n                <Form.Item>\n                    {getFieldDecorator('username', {\n                        rules: [{required: true, message: '请输入用户名'}],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            placeholder=\"用户名 默认:admin\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{required: true, message: '请输入密码'}],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            type=\"password\"\n                            placeholder=\"密码 默认:123456\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item style={{marginBottom:0}}>\n                    <Button type=\"primary\" htmlType=\"submit\" block>登录</Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    position: \"absolute\",\n                    top: \"0\",\n                    left: \"0\",\n                    background: \"url(//gw.alipayobjects.com/zos/rmsportal/TVYTbAXWheQpRcWDaDMu.svg) #f0f2f5 no-repeat center 110px\",\n                    backgroundSize: \"100%\",\n                }}>\n                <Row type=\"flex\" justify=\"center\">\n                    <Col span={6}>\n                        <div style={{marginTop: \"150px\"}}>\n                            <Card title=\"用户登录\">\n                                {this.form()}\n                            </Card>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        );\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        initialize: (data) => {\n            dispatch(action.all(data))\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Form.create({name: 'login'})(Login));\n","import React from 'react';\nimport Main from \"src/layouts/main\"\nimport Login from \"src/layouts/login\"\nimport request from \"src/utils/request\"\nimport {getToken} from \"src/utils/helper\"\nimport {action} from \"./reducers/admin\";\nimport {connect} from 'react-redux'\nimport { message } from 'antd';\n\ninterface props {\n    initialize(data)\n\n    logout()\n\n    user: object\n    isLogin: boolean\n}\n\nclass App extends React.Component<props> {\n    componentDidMount() {\n        message.info('注意:服务端每个小时会自动重置数据库,重置后需要重新登录',3600);\n        if (getToken()){\n            return request(\"/load\").success(response => {\n                this.props.initialize(response.data)\n            }).error(() => this.props.logout()).complete(() => {\n                this.removeLoading()\n            }).get()\n        }\n        this.removeLoading()\n    }\n\n    removeLoading(){\n        // @ts-ignore\n        document.querySelector(\"#loading\").remove();\n    }\n\n    render() {\n        return <div>{this.props.isLogin ? <Main/> : <Login/>}</div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.admin.user,\n        isLogin: !!state.admin.user.id,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        initialize: (data) => {\n            dispatch(action.all(data))\n        },\n        logout() {\n            dispatch(action.user())\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'antd/dist/antd.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducers from './reducers'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router} from 'react-router-dom'\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\n\nReactDOM.render(\n    <ConfigProvider locale={zhCN}>\n        <Provider store={createStore(reducers)}>\n            <Router>\n                <App />\n            </Router>\n        </Provider>\n    </ConfigProvider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React from 'react';\nimport {FormComponentProps} from \"antd/es/form\";\nimport {Form, Input} from \"antd\";\n\ninterface props extends FormComponentProps {\n    default: object\n}\n\nclass Setting extends React.Component<props> {\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form labelCol={{span: 4}} wrapperCol={{span: 20}}>\n                {\n                    this.props.default['id'] ?\n                        getFieldDecorator('id', {initialValue: this.props.default['id']})(<Input type=\"hidden\"/>)\n                        : \"\"\n                }\n                <Form.Item label=\"名称\">\n                    {\n                        getFieldDecorator(\n                            'name', {rules: [{required: true}], initialValue: this.props.default['name']}\n                        )(<Input/>)\n                    }\n                </Form.Item>\n                <Form.Item label=\"描述\">\n                    {\n                        getFieldDecorator(\n                            'description', {initialValue: this.props.default['description']}\n                        )(<Input.TextArea rows={4}/>)\n                    }\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\nexport default Setting\n","import React from 'react';\nimport request from \"src/utils/request\";\nimport {Modal, Tree} from 'antd';\nimport {menuSort} from \"src/utils/helper\";\n\nconst {TreeNode} = Tree;\n\ninterface props {\n    id: number\n}\n\nclass AssignMenu extends React.Component<props> {\n    state = {\n        menu: {},\n        menuIdsTree: []\n    }\n\n    componentDidMount() {\n        this.load()\n    }\n\n    load() {\n        request('/system/auth/getMenu').data({id: this.props.id}).success((r) => {\n            this.setState({\n                menu: (() => {\n                    let menu = {}\n                    r.data.forEach((item) => {\n                        item['id'] = parseInt(item['id'], 10)\n                        menu[item['id']] = item\n                    })\n                    return menu\n                })(),\n                menuIdsTree: menuSort(r.data).map(({id}) => parseInt(id, 10))\n            })\n        }).get();\n    }\n\n    checked() {\n        let checked = new Set<number>(\n            this.state.menuIdsTree.filter(id => this.state.menu[id]['checked'])\n        )\n        this.state.menuIdsTree.forEach(id => {\n            let item = this.state.menu[id]\n            // 过滤上级选中\n            if (!item['checked']) {\n                this.getParentIds(item['id']).forEach(id => {\n                    checked.delete(id)\n                })\n            }\n        })\n        return Array.from(checked).map(id => id.toString())\n    }\n\n    tree(pid = 0) {\n        return this.state.menuIdsTree.filter(id => this.state.menu[id]['parent_id'] === pid).map((id) => (\n            <TreeNode title={this.state.menu[id]['name']} key={id}>\n                {this.tree(id)}\n            </TreeNode>\n        ))\n    }\n\n    onCheck(checked) {\n        let req = request('/system/auth/assignMenu').data({\n            menuIds: this.addParentChecked(checked.map(id => {\n                return parseInt(id, 10);\n            })),\n            id: this.props.id\n        }).success(() => {\n            this.load();\n        })\n        if (checked.length < 1) {\n            return Modal.confirm({\n                title: '确定要清空当前的所有菜单?',\n                onOk: () => {\n                    req.post()\n                },\n                onCancel: () => {\n                    this.load()\n                }\n            })\n        }\n        req.post()\n    }\n\n    getParentIds(id) {\n        let parent: number[] = []\n        const item = this.state.menu[id]\n        if (item['parent_id'] !== 0) {\n            parent.push(\n                item['parent_id'],\n                ...this.getParentIds(item['parent_id'])\n            )\n        }\n        return parent\n    }\n\n    addParentChecked(checked: number[]) {\n        let parent: number[] = []\n        checked.forEach(id => {\n            parent.push(...this.getParentIds(id))\n        })\n        return Array.from(new Set<number>([...checked, ...parent]))\n    }\n\n    render() {\n        return this.state.menuIdsTree.length > 0 ?\n            <Tree\n                checkable\n                defaultExpandedKeys={this.state.menuIdsTree.map((id: number) => id.toString())}\n                checkedKeys={this.checked()}\n                onCheck={this.onCheck.bind(this)}\n            >\n                {this.tree()}\n            </Tree>\n            : \"\"\n    }\n}\n\nexport default AssignMenu\n","import React from 'react';\nimport {Button, Table} from \"antd\";\nimport TableLists from \"src/components/tableLists\";\nimport request from \"src/utils/request\";\nimport Filter from \"../components/filter\"\n\nconst {Column} = Table;\n\ninterface props {\n    id: number\n}\n\nclass AssignRequest extends React.Component<props> {\n    state = {\n        assign: [], // 已分配数据\n    }\n    noAssigntableRef: any = null\n\n    load({data: {lists: {assign}}}) {\n        this.setState({assign})\n    }\n\n    join(row) {\n        request('/system/auth/assignRequest').data({\n            id: this.props.id,\n            requestId: row.id\n        }).success(() => {\n            this.reload();\n        }).get();\n    }\n\n    remove(row) {\n        request('/system/auth/removeRequest').data({\n            id: this.props.id,\n            requestId: row.id\n        }).success(() => {\n            this.reload();\n        }).get();\n    }\n\n    reload() {\n        this.noAssigntableRef.load()\n    }\n\n    render() {\n        return (\n            <div>\n                <TableLists\n                    ref={ref => {\n                        this.noAssigntableRef = ref\n                    }}\n                    pageSize={5}\n                    filter={Filter}\n                    filterProps={\n                        {\n                            hidden: [\n                                {name: \"id\", value: this.props.id}\n                            ]\n                        }\n                    }\n                    action=\"/system/auth/getRequest\"\n                    update={this.load.bind(this)}\n                    listsDarse={({data: {lists: {noAssign}}}) => noAssign}\n                >\n                    <Column title=\"ID\" dataIndex=\"id\"/>\n                    <Column title=\"名称\" dataIndex=\"name\"/>\n                    <Column title=\"ACTION\" dataIndex=\"action\"/>\n                    <Column title=\"操作\" key=\"op\" render={(text, row: object) => (\n                        <Button type=\"primary\" size=\"small\" onClick={() => this.join(row)}>加入</Button>\n                    )}/>\n                </TableLists>\n\n                <Table dataSource={this.state.assign} rowKey=\"id\" bordered>\n                    <Column title=\"ID\" dataIndex=\"id\"/>\n                    <Column title=\"名称\" dataIndex=\"name\"/>\n                    <Column title=\"ACTION\" dataIndex=\"action\"/>\n                    <Column title=\"操作\" key=\"op\" render={(text, row: object) => (\n                        <Button type=\"danger\" size=\"small\" onClick={() => this.remove(row)}>移出</Button>\n                    )}/>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport default AssignRequest\n","import React from 'react';\nimport {Button, Table} from \"antd\";\nimport TableLists from \"src/components/tableLists\";\nimport request from \"src/utils/request\";\nimport Filter from \"../components/filter\"\n\nconst {Column} = Table;\n\ninterface props {\n    id: number\n}\n\nclass AssignUserGroup extends React.Component<props> {\n    state = {\n        assign: [], // 已分配数据\n    }\n    noAssigntableRef: any = null\n\n    load({data: {lists: {assign}}}) {\n        this.setState({assign})\n    }\n\n    join(row) {\n        request('/system/auth/assignUserGroup').data({\n            id: this.props.id,\n            userGroupId: row.id\n        }).success(() => {\n            this.reload();\n        }).get();\n    }\n\n    remove(row) {\n        request('/system/auth/removeUserGroup').data({\n            id: this.props.id,\n            userGroupId: row.id\n        }).success(() => {\n            this.reload();\n        }).get();\n    }\n\n    reload() {\n        this.noAssigntableRef.load()\n    }\n\n    render() {\n        return (\n            <div>\n                <TableLists\n                    ref={ref => {\n                        this.noAssigntableRef = ref\n                    }}\n                    pageSize={5}\n                    filter={Filter}\n                    filterProps={\n                        {\n                            hidden: [\n                                {name: \"id\", value: this.props.id}\n                            ]\n                        }\n                    }\n                    action=\"/system/auth/getUserGroup\"\n                    update={this.load.bind(this)}\n                    listsDarse={({data: {lists: {noAssign}}}) => noAssign}\n                >\n                    <Column title=\"ID\" dataIndex=\"id\"/>\n                    <Column title=\"名称\" dataIndex=\"name\"/>\n                    <Column title=\"操作\" key=\"op\" render={(text, row: object) => (\n                        <Button type=\"primary\" size=\"small\" onClick={() => this.join(row)}>加入</Button>\n                    )}/>\n                </TableLists>\n\n                <Table dataSource={this.state.assign} rowKey=\"id\" bordered>\n                    <Column title=\"ID\" dataIndex=\"id\"/>\n                    <Column title=\"名称\" dataIndex=\"name\"/>\n                    <Column title=\"操作\" key=\"op\" render={(text, row: object) => (\n                        <Button type=\"danger\" size=\"small\" onClick={() => this.remove(row)}>移出</Button>\n                    )}/>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport default AssignUserGroup\n","import React from 'react';\nimport {Button, Table, Modal, Drawer} from \"antd\"\nimport Filter from \"../components/filter\"\nimport TableLists from \"src/components/tableLists\"\nimport request from \"src/utils/request\";\nimport modalForm from \"src/components/modalForm\"\nimport Setting from \"./setting\";\nimport AssignMenu from \"./assignMenu\";\nimport AssignRequest from \"./assignRequest\";\nimport AssignUserGroup from \"./assignUserGroup\";\n\nconst {Column} = Table;\n\nclass UserGroup extends React.Component {\n    state = {\n        currentAssignId: 0,\n        currentAssignType: \"\",\n    }\n    tableRef: any = null\n\n    add() {\n        this.set({})\n    }\n\n    edit(row) {\n        this.set(row)\n    }\n\n    remove(row) {\n        Modal.confirm({\n            title: '确认要删除[' + row.name + ']?',\n            onOk: () => {\n                request(\"/system/auth/remove\").data({id: row.id}).showSuccessTip().success(() => {\n                    this.tableRef.load()\n                }).get()\n            }\n        })\n    }\n\n    set(row) {\n        modalForm(\n            \"/system/auth/save\",\n            Setting,\n            {\n                default: row || {}\n            },\n            {\n                title: row['id'] ? \"编辑 [id:\" + row[\"id\"] + \"]\" : \"添加\",\n                onSuccess: () => {\n                    this.tableRef.load()\n                }\n            }\n        )\n    }\n\n\n    assign(row,type){\n        this.setState({currentAssignId:row.id,currentAssignType:type})\n    }\n    assignClose(){\n        this.setState({currentAssignId:0,currentAssignType:\"\"})\n        this.tableRef.load()\n    }\n\n\n    render() {\n        return (\n            <div>\n                <TableLists\n                    ref={ref => {\n                        this.tableRef = ref\n                    }}\n                    right={<Button type=\"primary\" icon=\"plus\" onClick={this.add.bind(this)}>添加</Button>}\n                    filter={Filter}\n                    action=\"/system/auth/lists\"\n                >\n                    <Column title=\"ID\" dataIndex=\"id\"/>\n                    <Column title=\"名称\" dataIndex=\"name\"/>\n                    <Column title=\"创建时间\" dataIndex=\"create_time\"/>\n                    <Column title=\"请求\" key=\"request\" render={(text, row: object) => (\n                        <Button size=\"small\" onClick={()=>this.assign(row,'request')}>分配请求({row['request'].length})</Button>\n                    )}/>\n                    <Column title=\"用户组\" key=\"userGroup\" render={(text, row: object) => (\n                        <Button size=\"small\" onClick={()=>this.assign(row,'userGroup')}>分配用户组({row['userGroup'].length})</Button>\n                    )}/>\n                    <Column title=\"菜单\" key=\"menu\" render={(text, row: object) => (\n                        <Button size=\"small\" onClick={()=>this.assign(row,'menu')}>分配菜单({row['menu'].length})</Button>\n                    )}/>\n                    <Column title=\"操作\" key=\"op\" render={(text, row: object) => (\n                        <div>\n                            <Button type=\"primary\" size=\"small\" onClick={() => this.edit(row)}\n                                    style={{marginRight: \"8px\"}}>编辑</Button>\n                            <Button type=\"danger\" size=\"small\" onClick={() => this.remove(row)}>删除</Button>\n                        </div>\n                    )}/>\n                </TableLists>\n                <Drawer\n                    destroyOnClose\n                    width={900}\n                    title=\"请求分配\"\n                    onClose={this.assignClose.bind(this)}\n                    visible={this.state.currentAssignType === \"request\"}\n                >\n                    <AssignRequest id={this.state.currentAssignId} />\n                </Drawer>\n                <Drawer\n                    destroyOnClose\n                    width={900}\n                    title=\"用户组分配\"\n                    onClose={this.assignClose.bind(this)}\n                    visible={this.state.currentAssignType === \"userGroup\"}\n                >\n                    <AssignUserGroup id={this.state.currentAssignId} />\n                </Drawer>\n                <Drawer\n                    destroyOnClose\n                    width={400}\n                    title=\"菜单分配\"\n                    onClose={this.assignClose.bind(this)}\n                    visible={this.state.currentAssignType === \"menu\"}\n                >\n                    <AssignMenu id={this.state.currentAssignId} />\n                </Drawer>\n            </div>\n\n\n        )\n    }\n}\n\nexport default UserGroup;\n","const data: string[] = [\n    'step-backward',\n    'step-forward',\n    'fast-backward',\n    'fast-forward',\n    'shrink',\n    'arrows-alt',\n    'down',\n    'up',\n    'left',\n    'right',\n    'caret-up',\n    'caret-down',\n    'caret-left',\n    'caret-right',\n    'up-circle',\n    'down-circle',\n    'left-circle',\n    'right-circle',\n    'double-right',\n    'double-left',\n    'vertical-left',\n    'vertical-right',\n    'vertical-align-top',\n    'vertical-align-middle',\n    'vertical-align-bottom',\n    'forward',\n    'backward',\n    'rollback',\n    'enter',\n    'retweet',\n    'swap',\n    'swap-left',\n    'swap-right',\n    'arrow-up',\n    'arrow-down',\n    'arrow-left',\n    'arrow-right',\n    'play-circle',\n    'up-square',\n    'down-square',\n    'left-square',\n    'right-square',\n    'login',\n    'logout',\n    'menu-fold',\n    'menu-unfold',\n    'border-bottom',\n    'border-horizontal',\n    'border-inner',\n    'border-outer',\n    'border-left',\n    'border-right',\n    'border-top',\n    'border-verticle',\n    'pic-center',\n    'pic-left',\n    'pic-right',\n    'radius-bottomleft',\n    'radius-bottomright',\n    'radius-upleft',\n    'radius-upright',\n    'fullscreen',\n    'fullscreen-exit',\n    'question',\n    'question-circle',\n    'plus',\n    'plus-circle',\n    'pause',\n    'pause-circle',\n    'minus',\n    'minus-circle',\n    'plus-square',\n    'minus-square',\n    'info',\n    'info-circle',\n    'exclamation',\n    'exclamation-circle',\n    'close',\n    'close-circle',\n    'close-square',\n    'check',\n    'check-circle',\n    'check-square',\n    'clock-circle',\n    'warning',\n    'issues-close',\n    'stop',\n    'edit',\n    'form',\n    'copy',\n    'scissor',\n    'delete',\n    'snippets',\n    'diff',\n    'highlight',\n    'align-center',\n    'align-left',\n    'align-right',\n    'bg-colors',\n    'bold',\n    'italic',\n    'underline',\n    'strikethrough',\n    'redo',\n    'undo',\n    'zoom-in',\n    'zoom-out',\n    'font-colors',\n    'font-size',\n    'line-height',\n    'dash',\n    'small-dash',\n    'sort-ascending',\n    'sort-descending',\n    'drag',\n    'ordered-list',\n    'unordered-list',\n    'radius-setting',\n    'column-width',\n    'column-height',\n    'area-chart',\n    'pie-chart',\n    'bar-chart',\n    'dot-chart',\n    'line-chart',\n    'radar-chart',\n    'heat-map',\n    'fall',\n    'rise',\n    'stock',\n    'box-plot',\n    'fund',\n    'sliders',\n    'android',\n    'apple',\n    'windows',\n    'ie',\n    'chrome',\n    'github',\n    'aliwangwang',\n    'dingding',\n    'weibo-square',\n    'weibo-circle',\n    'taobao-circle',\n    'html5',\n    'weibo',\n    'twitter',\n    'wechat',\n    'youtube',\n    'alipay-circle',\n    'taobao',\n    'skype',\n    'qq',\n    'medium-workmark',\n    'gitlab',\n    'medium',\n    'linkedin',\n    'google-plus',\n    'dropbox',\n    'facebook',\n    'codepen',\n    'code-sandbox',\n    'amazon',\n    'google',\n    'codepen-circle',\n    'alipay',\n    'ant-design',\n    'ant-cloud',\n    'aliyun',\n    'zhihu',\n    'slack',\n    'slack-square',\n    'behance',\n    'behance-square',\n    'dribbble',\n    'dribbble-square',\n    'instagram',\n    'yuque',\n    'alibaba',\n    'yahoo',\n    'reddit',\n    'sketch',\n    'account-book',\n    'alert',\n    'api',\n    'appstore',\n    'audio',\n    'bank',\n    'bell',\n    'book',\n    'bug',\n    'bulb',\n    'calculator',\n    'build',\n    'calendar',\n    'camera',\n    'car',\n    'carry-out',\n    'cloud',\n    'code',\n    'compass',\n    'contacts',\n    'container',\n    'control',\n    'credit-card',\n    'crown',\n    'customer-service',\n    'dashboard',\n    'database',\n    'dislike',\n    'environment',\n    'experiment',\n    'eye-invisible',\n    'eye',\n    'file-add',\n    'file-excel',\n    'file-exclamation',\n    'file-image',\n    'file-markdown',\n    'file-pdf',\n    'file-ppt',\n    'file-text',\n    'file-unknown',\n    'file-word',\n    'file-zip',\n    'file',\n    'filter',\n    'fire',\n    'flag',\n    'folder-add',\n    'folder',\n    'folder-open',\n    'frown',\n    'funnel-plot',\n    'gift',\n    'hdd',\n    'heart',\n    'home',\n    'hourglass',\n    'idcard',\n    'insurance',\n    'interaction',\n    'layout',\n    'like',\n    'lock',\n    'mail',\n    'medicine-box',\n    'meh',\n    'message',\n    'mobile',\n    'money-collect',\n    'pay-circle',\n    'notification',\n    'phone',\n    'picture',\n    'play-square',\n    'printer',\n    'profile',\n    'project',\n    'pushpin',\n    'property-safety',\n    'read',\n    'reconciliation',\n    'red-envelope',\n    'rest',\n    'rocket',\n    'safety-certificate',\n    'save',\n    'schedule',\n    'security-scan',\n    'setting',\n    'shop',\n    'shopping',\n    'skin',\n    'smile',\n    'sound',\n    'star',\n    'switcher',\n    'tablet',\n    'tag',\n    'tags',\n    'tool',\n    'thunderbolt',\n    'trophy',\n    'unlock',\n    'usb',\n    'video-camera',\n    'wallet',\n    'apartment',\n    'audit',\n    'barcode',\n    'bars',\n    'block',\n    'border',\n    'branches',\n    'ci',\n    'cloud-download',\n    'cloud-server',\n    'cloud-sync',\n    'cloud-upload',\n    'cluster',\n    'coffee',\n    'copyright',\n    'deployment-unit',\n    'desktop',\n    'disconnect',\n    'dollar',\n    'download',\n    'ellipsis',\n    'euro',\n    'exception',\n    'export',\n    'file-done',\n    'file-jpg',\n    'file-protect',\n    'file-sync',\n    'file-search',\n    'fork',\n    'gateway',\n    'global',\n    'gold',\n    'history',\n    'import',\n    'inbox',\n    'key',\n    'laptop',\n    'link',\n    'line',\n    'loading-3-quarters',\n    'loading',\n    'man',\n    'menu',\n    'monitor',\n    'more',\n    'number',\n    'percentage',\n    'paper-clip',\n    'pound',\n    'poweroff',\n    'pull-request',\n    'qrcode',\n    'reload',\n    'safety',\n    'robot',\n    'scan',\n    'search',\n    'select',\n    'shake',\n    'share-alt',\n    'shopping-cart',\n    'solution',\n    'sync',\n    'table',\n    'team',\n    'to-top',\n    'trademark',\n    'transaction',\n    'upload',\n    'user-add',\n    'user-delete',\n    'usergroup-add',\n    'user',\n    'usergroup-delete',\n    'wifi',\n    'woman',\n]\nexport default data","import React from 'react';\nimport {Button, Drawer, Icon, Row, Col} from \"antd\";\n\nimport iconData from \"./iconData\"\n\ninterface props {\n    icon: string\n\n    update(icon)\n}\n\ninterface state {\n    iconSelectVisible: boolean\n    icon: string\n}\n\nclass IconSelect extends React.Component<props, state> {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            iconSelectVisible: false,\n            icon: this.props.icon\n        }\n    }\n\n    open() {\n        this.setState({iconSelectVisible: true})\n    }\n\n    close = () => {\n        this.setState({iconSelectVisible: false})\n    };\n\n    select(icon) {\n        this.setState({icon}, () => {\n            this.props.update(icon)\n            this.close()\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Drawer\n                    width={800}\n                    title=\"图标选择\"\n                    placement=\"left\"\n                    closable={true}\n                    onClose={this.close.bind(this)}\n                    visible={this.state.iconSelectVisible}\n                >\n                    <Row>\n                        {iconData.map(item => {\n                            return (\n                                <Col span={4} key={item}>\n                                    <div className=\"admin-menu-icon-select-item\" onClick={() => this.select(item)}>\n                                        <Icon type={item} style={{fontSize:\"38px\"}}/>\n                                        <p>{item}</p>\n                                    </div>\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                </Drawer>\n                {\n                    this.state.icon ? (\n                            <span>\n                                <Icon type={this.state.icon} style={{marginRight:\"5px\",fontSize:\"14px\"}}/>\n                                <span>{this.state.icon}</span>\n                            </span>\n                        ) : \"\"\n                }\n                <Button size=\"default\" onClick={this.open.bind(this)} style={{margin: \"0 8px\"}}>选择</Button>\n            </div>\n        )\n    }\n}\n\nexport default IconSelect\n","import React from 'react';\nimport {FormComponentProps} from \"antd/es/form\";\nimport {Form, Input} from \"antd\";\nimport IconSelect from \"./iconSelect\"\n\ninterface props extends FormComponentProps {\n    default: object\n}\n\ninterface state {\n    icon: string\n}\n\nclass Setting extends React.Component<props, state> {\n    constructor(props) {\n        super(props)\n        this.state = {\n            icon: this.props.default[\"icon\"] || \"\"\n        }\n    }\n\n    getFieldsValue() {\n        return {...this.props.form.getFieldsValue(), icon: this.state.icon}\n    }\n\n\n    updateIcon(icon) {\n        this.setState({icon})\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form labelCol={{span: 4}} wrapperCol={{span: 20}}>\n                {\n                    this.props.default['id'] ?\n                        getFieldDecorator('id', {initialValue: this.props.default['id']})(<Input type=\"hidden\"/>)\n                        : \"\"\n                }\n                <Form.Item label=\"名称\">\n                    {\n                        getFieldDecorator(\n                            'name', {rules: [{required: true}], initialValue: this.props.default['name']}\n                        )(<Input/>)\n                    }\n                </Form.Item>\n                <Form.Item label=\"父菜单ID\">\n                    {\n                        getFieldDecorator(\n                            'parent_id', {rules: [{required: true}],initialValue: this.props.default['parent_id']}\n                        )(<Input/>)\n                    }\n                </Form.Item>\n                <Form.Item label=\"链接\">\n                    {\n                        getFieldDecorator(\n                            'url', {initialValue: this.props.default['url']}\n                        )(<Input placeholder=\"页面型菜单链接不能为空，目录型菜单链接要置空\"/>)\n                    }\n                </Form.Item>\n                <Form.Item label=\"图标\">\n                    <IconSelect icon={this.state.icon} update={this.updateIcon.bind(this)}/>\n                </Form.Item>\n                <Form.Item label=\"描述\">\n                    {\n                        getFieldDecorator(\n                            'description', {initialValue: this.props.default['description']}\n                        )(<Input.TextArea rows={4}/>)\n                    }\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create<props>()(Setting)\n","import React from 'react';\nimport {Button, Modal, Card, Row, Col, notification, Tree, Icon} from \"antd\"\nimport request from \"src/utils/request\";\nimport Setting from \"./setting\";\nimport \"./style.css\"\nimport {menuSort} from \"src/utils/helper\";\n\nconst {TreeNode} = Tree;\n\nclass Menu extends React.Component {\n    state = {\n        menu: {},\n        menuIdsTree: [],\n        current: {}\n    }\n\n    settingRef: any = null\n\n    componentDidMount() {\n        this.load()\n    }\n\n    load() {\n        request('/system/menu/lists').success(({data}) => {\n            this.setState({\n                menu: (() => {\n                    let menu = {}\n                    data.forEach((item) => {\n                        item['id'] = parseInt(item['id'], 10)\n                        menu[item['id']] = item\n                    })\n                    return menu\n                })(),\n                menuIdsTree: menuSort(data).map(({id}) => parseInt(id, 10))\n            })\n        }).get()\n    }\n\n    add(parent_id = 0) {\n        this.set({parent_id})\n    }\n\n    edit(id) {\n        this.set(this.state.menu[id])\n    }\n\n    set(current) {\n        if (Object.keys(this.state.current).length > 0) {\n            return notification.error({message: '请先保存或放弃当前编辑/添加的菜单'})\n        }\n        this.setState({current})\n    }\n\n    remove(id) {\n        Modal.confirm({\n            title: '确认要删除[' + this.state.menu[id]['name'] + ']?',\n            onOk: () => {\n                request(\"/system/menu/remove\").data({id: id}).showSuccessTip().success(() => {\n                    this.load()\n                }).get()\n            }\n        })\n    }\n\n    sort(id, op) {\n        let brother = this.brother(id)\n        let location = this.location(id)\n        if (brother.length < 2 || (location.type === \"head\" && op === \"up\") || (location.type === \"last\" && op === \"down\")) {\n            return notification.error({message: '无法执行排序'})\n        }\n\n        let newLists: any[] = [...brother]\n        newLists[location.index] = newLists[(op === \"up\" ? location.index - 1 : location.index + 1)]\n        newLists[(op === \"up\" ? location.index - 1 : location.index + 1)] = id\n\n        request(\"/system/menu/sort\").data(\n            {\n                menus: newLists.map(\n                    (id, sort) => {\n                        return {id, sort}\n                    }\n                )\n            }\n        ).showSuccessTip().success(() => {\n            this.load()\n        }).post()\n    }\n\n    cancel() {\n        Modal.confirm({\n            title: '确认要取消添加/编辑?',\n            onOk: () => {\n                this.close()\n            }\n        })\n    }\n\n    save() {\n        request(\"/system/menu/save\").data(this.settingRef.getFieldsValue()).showSuccessTip().success(() => {\n            this.load()\n            this.close()\n        }).post()\n    }\n\n    close() {\n        this.setState({current: {}})\n    }\n\n\n    setting() {\n        if (Object.keys(this.state.current).length > 0) {\n            return (\n                <Card\n                    size=\"small\"\n                    title={this.state.current['id'] ? \"添加\" : \"编辑\"}\n                    extra={\n                        <div>\n                            <Button type=\"danger\" size=\"small\"\n                                    onClick={this.cancel.bind(this)} style={{marginRight: \"10px\"}}>放弃</Button>\n                            <Button type=\"primary\" size=\"small\"\n                                    onClick={this.save.bind(this)}>保存</Button>\n                        </div>\n                    }\n                >\n                    <Setting default={this.state.current} wrappedComponentRef={ref => this.settingRef = ref}/>\n                </Card>\n            )\n        }\n        return \"\"\n    }\n\n    menu() {\n        if (this.state.menuIdsTree.length > 0) {\n            return (\n                <Tree selectable={false}\n                      defaultExpandedKeys={this.state.menuIdsTree.map((id: number) => id.toString())}>\n                    {this.tree()}\n                </Tree>\n            )\n        }\n        return \"\"\n    }\n\n    // 获取兄弟节点\n    brother(id) {\n        return this.state.menuIdsTree.filter(cid => {\n            return this.state.menu[cid]['parent_id'] === this.state.menu[id]['parent_id']\n        })\n    }\n\n    children(pid) {\n        return this.state.menuIdsTree.filter(id => {\n            return this.state.menu[id]['parent_id'] === pid\n        })\n    }\n\n    location(id) {\n        let brother = this.brother(id)\n        let currentIndex = 0;\n        for (let i = 0; i < brother.length; i++) {\n            if (brother[i] === id) {\n                currentIndex = i\n                break;\n            }\n        }\n        if (currentIndex === 0) {\n            return {index: currentIndex, type: \"head\"}\n        }\n        if ((currentIndex + 1) === brother.length) {\n            return {index: currentIndex, type: \"last\"}\n        }\n        return {index: currentIndex, type: \"middle\"}\n    }\n\n    tree(pid = 0, level = 1) {\n        return this.children(pid).map((id) => (\n            <TreeNode title={this.treeContent(id, level)} key={id}>\n                {this.tree(id, level + 1)}\n            </TreeNode>\n        ))\n    }\n\n    treeContent(id, level) {\n        return (\n            <div style={{width: \"100%\"}}>\n                <div style={{display: \"inline-block\"}}>\n                    <Icon type=\"file-text\"/> [{id}]{this.state.menu[id]['name']}\n                </div>\n                <div style={{display: \"inline-block\", float: \"right\"}}>\n                    <Button disabled={this.location(id).type === \"last\"} icon=\"arrow-down\" size=\"small\"\n                            onClick={() => this.sort(id, 'down')} style={{marginRight: \"8px\"}}/>\n                    <Button disabled={this.location(id).type === \"head\"} icon=\"arrow-up\" size=\"small\"\n                            onClick={() => this.sort(id, 'up')} style={{marginRight: \"8px\"}}/>\n                    <Button disabled={level > 2} icon=\"plus\" type=\"primary\" size=\"small\"\n                            onClick={() => this.add(this.state.menu[id]['parent_id'])} style={{marginRight: \"8px\"}}/>\n                    <Button icon=\"edit\" size=\"small\" onClick={() => this.edit(id)} style={{marginRight: \"8px\"}}/>\n                    <Button disabled={this.children(id).length > 0} icon=\"delete\" type=\"danger\" size=\"small\"\n                            onClick={() => this.remove(id)}/>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <Row gutter={16}>\n                    <Col className=\"gutter-row\" span={9}>\n                        <Card\n                            size=\"small\"\n                            title=\"菜单层级\"\n                            extra={\n                                <Button type=\"primary\" size=\"small\" onClick={() => this.add()}>添加一级菜单</Button>\n                            }\n                        >\n                            <div className=\"admin-menu-lists\">\n                                {this.menu()}\n                            </div>\n                        </Card>\n                    </Col>\n                    <Col className=\"gutter-row\" span={15}>{this.setting()}</Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default Menu;","import React from 'react';\nimport {FormComponentProps} from \"antd/es/form\";\nimport {Form, Input} from \"antd\";\n\ninterface props extends FormComponentProps {\n    default: object\n}\n\nclass Setting extends React.Component<props> {\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form labelCol={{span: 4}} wrapperCol={{span: 20}}>\n                {\n                    this.props.default['id'] ?\n                        getFieldDecorator('id', {initialValue: this.props.default['id']})(<Input type=\"hidden\"/>)\n                        : \"\"\n                }\n                <Form.Item label=\"名称\">\n                    {\n                        getFieldDecorator(\n                            'name', {rules: [{required: true}], initialValue: this.props.default['name']}\n                        )(<Input/>)\n                    }\n                </Form.Item>\n                <Form.Item label=\"描述\">\n                    {\n                        getFieldDecorator(\n                            'description', {initialValue: this.props.default['description']}\n                        )(<Input.TextArea rows={4}/>)\n                    }\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\nexport default Setting\n","import React from 'react';\nimport {Button, Table} from \"antd\";\nimport TableLists from \"src/components/tableLists\";\nimport request from \"src/utils/request\";\nimport Filter from \"../components/filter\"\n\nconst {Column} = Table;\n\ninterface props {\n    id: number\n}\n\nclass AssignUser extends React.Component<props> {\n    state = {\n        assign: [], // 已分配数据\n    }\n    noAssigntableRef: any = null\n\n    load({data: {lists: {assign}}}) {\n        this.setState({assign})\n    }\n\n    join(row) {\n        request('/system/userGroup/assignUser').data({\n            id: this.props.id,\n            userId: row.id\n        }).success(() => {\n            this.reload();\n        }).get();\n    }\n\n    remove(row) {\n        request('/system/userGroup/removeUser').data({\n            id: this.props.id,\n            userId: row.id\n        }).success(() => {\n            this.reload();\n        }).get();\n    }\n\n    reload() {\n        this.noAssigntableRef.load()\n    }\n\n    render() {\n        return (\n            <div>\n                <TableLists\n                    ref={ref => {\n                        this.noAssigntableRef = ref\n                    }}\n                    pageSize={5}\n                    filter={Filter}\n                    filterProps={\n                        {\n                            hidden: [\n                                {name: \"id\", value: this.props.id}\n                            ]\n                        }\n                    }\n                    action=\"/system/userGroup/getUser\"\n                    update={this.load.bind(this)}\n                    listsDarse={({data: {lists: {noAssign}}}) => noAssign}\n                >\n                    <Column title=\"ID\" dataIndex=\"id\"/>\n                    <Column title=\"用户名\" dataIndex=\"username\"/>\n                    <Column title=\"操作\" key=\"op\" render={(text, row: object) => (\n                        <Button type=\"primary\" size=\"small\" onClick={() => this.join(row)}>加入</Button>\n                    )}/>\n                </TableLists>\n\n                <Table dataSource={this.state.assign} rowKey=\"id\" bordered>\n                    <Column title=\"ID\" dataIndex=\"id\"/>\n                    <Column title=\"用户名\" dataIndex=\"username\"/>\n                    <Column title=\"操作\" key=\"op\" render={(text, row: object) => (\n                        <Button type=\"danger\" size=\"small\" onClick={() => this.remove(row)}>移出</Button>\n                    )}/>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport default AssignUser\n","import React from 'react';\nimport {Button, Table, Modal, Popover, Drawer} from \"antd\"\nimport Filter from \"../components/filter\"\nimport TableLists from \"src/components/tableLists\"\nimport request from \"src/utils/request\";\nimport modalForm from \"src/components/modalForm\"\nimport Setting from \"./setting\";\nimport AssignUser from \"./assignUser\";\n\nconst {Column} = Table;\n\nclass UserGroup extends React.Component {\n    state = {\n        currentAssignId: 0\n    }\n    tableRef: any = null\n\n    add() {\n        this.set({})\n    }\n\n    edit(row) {\n        this.set(row)\n    }\n\n    remove(row) {\n        Modal.confirm({\n            title: '确认要删除[' + row.name + ']?',\n            onOk: () => {\n                request(\"/system/userGroup/remove\").data({id: row.id}).showSuccessTip().success(() => {\n                    this.tableRef.load()\n                }).get()\n            }\n        })\n    }\n\n    set(row) {\n        modalForm(\n            \"/system/userGroup/save\",\n            Setting,\n            {\n                default: row || {}\n            },\n            {\n                title: row['id'] ? \"编辑 [id:\" + row[\"id\"] + \"]\" : \"添加\",\n                onSuccess: () => {\n                    this.tableRef.load()\n                }\n            }\n        )\n    }\n\n    assignUserClose(){\n        this.setState({currentAssignId:0})\n        this.tableRef.load()\n    }\n    assignUser(row){\n        this.setState({currentAssignId:row.id})\n    }\n\n    render() {\n        return (\n            <div>\n                <TableLists\n                    ref={ref => {\n                        this.tableRef = ref\n                    }}\n                    right={<Button type=\"primary\" icon=\"plus\" onClick={this.add.bind(this)}>添加</Button>}\n                    filter={Filter}\n                    action=\"/system/userGroup/lists\"\n                >\n                    <Column title=\"ID\" dataIndex=\"id\"/>\n                    <Column title=\"名称\" dataIndex=\"name\"/>\n                    <Column title=\"创建时间\" dataIndex=\"create_time\"/>\n                    <Column title=\"更新时间\" dataIndex=\"update_time\"/>\n                    <Column title=\"用户\" key=\"user\" render={(text, row: object) => (\n                        <Button size=\"small\" onClick={()=>this.assignUser(row)}>分配用户({row['user'].length})</Button>\n                    )}/>\n                    <Column title=\"权限\" key=\"auth\" render={(text, row: object) => {\n                        const content = function () {\n                            if (row['auth'].length < 1) {\n                                return \"暂无\"\n                            }\n                            return row['auth'].map((item) => {\n                                return <div key={item.id}>{item.id}:{item.name}</div>\n                            })\n                        }\n                        return (\n                            <Popover content={content()}>\n                                <Button size=\"small\">权限({row['auth'].length})</Button>\n                            </Popover>\n                        )\n                    }}/>\n                    <Column title=\"操作\" key=\"op\" render={(text, row: object) => (\n                        <div>\n                            <Button type=\"primary\" size=\"small\" onClick={() => this.edit(row)}\n                                    style={{marginRight: \"8px\"}}>编辑</Button>\n                            <Button type=\"danger\" size=\"small\" onClick={() => this.remove(row)}>删除</Button>\n                        </div>\n                    )}/>\n                </TableLists>\n                <Drawer\n                    destroyOnClose\n                    width={900}\n                    title=\"用户分配\"\n                    onClose={this.assignUserClose.bind(this)}\n                    visible={this.state.currentAssignId > 0}\n                >\n                    <AssignUser id={this.state.currentAssignId} />\n                </Drawer>\n            </div>\n\n\n        )\n    }\n}\n\nexport default UserGroup;\n","import React from 'react';\nimport {FormComponentProps} from \"antd/es/form\";\nimport {Form, Input, Select} from \"antd\";\nimport marked from 'marked'\n\ninterface props extends FormComponentProps {\n    default: object\n    requestType: []\n}\n\nclass Setting extends React.Component<props> {\n    currentTypeDescription () {\n        let description = \"\"\n        this.props.requestType.forEach((item)=>{\n            if (item['type'] === this.props.form.getFieldValue('type')){\n                description = marked(item[\"description\"])\n            }\n        })\n        return (\n            description ? <Form.Item label=\"类型说明\"><div dangerouslySetInnerHTML={{__html:description}} /></Form.Item> : \"\"\n        )\n    }\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form labelCol={{span: 4}} wrapperCol={{span: 20}}>\n                {\n                    this.props.default['id'] ?\n                        getFieldDecorator('id', {initialValue: this.props.default['id']})(<Input type=\"hidden\"/>)\n                        : \"\"\n                }\n                <Form.Item label=\"名称\">\n                    {\n                        getFieldDecorator(\n                            'name', {rules: [{required: true}], initialValue: this.props.default['name']}\n                        )(<Input/>)\n                    }\n                </Form.Item>\n                <Form.Item label=\"ACTION\">\n                    {\n                        getFieldDecorator(\n                            'action', {rules: [{required: true}], initialValue: this.props.default['action']}\n                        )(<Input/>)\n                    }\n                </Form.Item>\n                <Form.Item label=\"类型\">\n                    {\n                        getFieldDecorator('type', {initialValue: this.props.default['type']})(\n                            <Select>\n                                {\n                                    this.props.requestType.map(\n                                        item => (\n                                            <Select.Option value={item['type']} key={item['type']}>{item['name']}</Select.Option>\n                                        )\n                                    )\n                                }\n                            </Select>\n                        )\n                    }\n                </Form.Item>\n                <Form.Item label=\"类型配置\">\n                    {\n                        getFieldDecorator(\n                            'call', {initialValue: this.props.default['call']}\n                        )(<Input.TextArea rows={4}/>)\n                    }\n                </Form.Item>\n                {this.currentTypeDescription()}\n            </Form>\n        )\n    }\n}\n\nexport default Setting\n","import React from 'react';\nimport {Button, Table, Tooltip, Modal, Popover} from \"antd\"\nimport Filter from \"../components/filter\"\nimport TableLists from \"src/components/tableLists\"\nimport FieldMap from \"src/components/fieldMap\"\nimport request from \"src/utils/request\";\nimport modalForm from \"src/components/modalForm\"\nimport Setting from \"./setting\";\n\nconst {Column} = Table;\n\nclass Request extends React.Component {\n    state = {\n        requestType: []\n    }\n\n    tableRef: any = null\n\n    constructor(props) {\n        super(props)\n        // 获取请求分类\n        request(\"/system/request/type\").success(r => {\n            this.setState({\n                requestType: r.data\n            })\n        }).get()\n    }\n\n    add() {\n        this.set({type: 'default'})\n    }\n\n    edit(row) {\n        this.set(row)\n    }\n\n    copy(row) {\n        delete row[\"id\"]\n        this.set(row)\n    }\n\n    remove(row) {\n        Modal.confirm({\n            title: '确认要删除[' + row.name + ']?',\n            onOk: () => {\n                request(\"/system/request/remove\").data({id: row.id}).showSuccessTip().success(() => {\n                    this.tableRef.load()\n                }).get()\n            }\n        })\n    }\n\n    set(row) {\n        modalForm(\n            \"/system/request/save\",\n            Setting,\n            {\n                default: row || {},\n                requestType: this.state.requestType\n            },\n            {\n                title: row['id'] ? \"编辑 [id:\" + row[\"id\"] + \"]\" : \"添加\",\n                onSuccess: () => {\n                    this.tableRef.load()\n                }\n            }\n        )\n    }\n\n    render() {\n        return (\n            <TableLists\n                ref={ref => {\n                    this.tableRef = ref\n                }}\n                right={<Button type=\"primary\" icon=\"plus\" onClick={this.add.bind(this)}>添加</Button>}\n                filter={Filter}\n                action=\"/system/request/lists\"\n            >\n                <Column title=\"ID\" dataIndex=\"id\"/>\n                <Column title=\"名称\" dataIndex=\"name\"/>\n                <Column title=\"类型\" dataIndex=\"type\" render={type => (\n                    <FieldMap valueField=\"type\" descField=\"name\" map={this.state.requestType}\n                              value={type}>未知分类({type})</FieldMap>\n                )}/>\n                <Column title=\"action\" dataIndex=\"action\" key=\"action\" render={(action, row: object) => (\n                    <Tooltip title={row['call']}>{action}</Tooltip>\n                )}/>\n                <Column title=\"创建时间\" dataIndex=\"create_time\" key=\"create_time\"/>\n                <Column title=\"权限\" key=\"auth\" render={(text, row: object) => {\n                    const content = function () {\n                        if (row['auth'].length < 1) {\n                            return \"暂无\"\n                        }\n                        return row['auth'].map((auth) => {\n                            return <div key={auth.id}>{auth.id}:{auth.name}</div>\n                        })\n                    }\n\n                    return (\n                        <Popover content={content()}>\n                            <Button size=\"small\">权限({row['auth'].length})</Button>\n                        </Popover>\n                    )\n                }}/>\n                <Column title=\"操作\" key=\"op\" render={(text, row: object) => (\n                    <div>\n                        <Button type=\"primary\" size=\"small\" onClick={() => this.edit(row)}\n                                style={{marginRight: \"8px\"}}>编辑</Button>\n                        <Button type=\"danger\" size=\"small\" onClick={() => this.remove(row)}\n                                style={{marginRight: \"8px\"}}>删除</Button>\n                        <Button size=\"small\" onClick={() => this.copy(row)}>复制</Button>\n                    </div>\n                )}/>\n            </TableLists>\n        )\n    }\n}\n\nexport default Request;\n","import React from 'react';\nimport {FormComponentProps} from \"antd/es/form\";\nimport {Form, Input, Select} from \"antd\";\n\ninterface props extends FormComponentProps {\n    default: object\n    userStatus: []\n}\n\nclass Setting extends React.Component<props> {\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form labelCol={{span: 4}} wrapperCol={{span: 20}}>\n                {\n                    this.props.default['id'] ?\n                        getFieldDecorator('id', {initialValue: this.props.default['id']})(<Input type=\"hidden\"/>)\n                        : \"\"\n                }\n                <Form.Item label=\"用户名\">\n                    {\n                        getFieldDecorator(\n                            'username', {rules: [{required: true}], initialValue: this.props.default['username']}\n                        )(<Input/>)\n                    }\n                </Form.Item>\n                <Form.Item label=\"密码\">\n                    {\n                        getFieldDecorator('password')(<Input/>)\n                    }\n                </Form.Item>\n                <Form.Item label=\"类型\">\n                    {\n                        getFieldDecorator('status', {initialValue: this.props.default['status']})(\n                            <Select>\n                                {\n                                    this.props.userStatus.map(\n                                        item => (\n                                            <Select.Option value={item['v']} key={item['v']}>{item['n']}</Select.Option>\n                                        )\n                                    )\n                                }\n                            </Select>\n                        )\n                    }\n                </Form.Item>\n                <Form.Item label=\"描述\">\n                    {\n                        getFieldDecorator(\n                            'description', {initialValue: this.props.default['description']}\n                        )(<Input.TextArea rows={4}/>)\n                    }\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\nexport default Setting\n","import React from 'react';\nimport {Button, Table, Modal, Popover} from \"antd\"\nimport Filter from \"../components/filter\"\nimport TableLists from \"src/components/tableLists\"\nimport FieldMap from \"src/components/fieldMap\"\nimport request from \"src/utils/request\";\nimport modalForm from \"src/components/modalForm\"\nimport Setting from \"./setting\";\n\nconst {Column} = Table;\n\nclass User extends React.Component {\n    state = {\n        userStatus: [\n            {v: 1, n: '启用'},\n            {v: 2, n: '禁用'}\n        ]\n    }\n\n    tableRef: any = null\n\n    add() {\n        this.set({status: 1})\n    }\n\n    edit(row) {\n        this.set(row)\n    }\n\n    remove(row) {\n        Modal.confirm({\n            title: '确认要删除[' + row.username + ']?',\n            onOk: () => {\n                request(\"/system/user/remove\").data({id: row.id}).showSuccessTip().success(() => {\n                    this.tableRef.load()\n                }).get()\n            }\n        })\n    }\n\n    set(row) {\n        modalForm(\n            \"/system/user/save\",\n            Setting,\n            {\n                default: row || {},\n                userStatus: this.state.userStatus\n            },\n            {\n                title: row['id'] ? \"编辑 [id:\" + row[\"id\"] + \"]\" : \"添加\",\n                onSuccess: () => {\n                    this.tableRef.load()\n                }\n            }\n        )\n    }\n\n    render() {\n        return (\n            <TableLists\n                ref={ref => {\n                    this.tableRef = ref\n                }}\n                right={<Button type=\"primary\" icon=\"plus\" onClick={this.add.bind(this)}>添加</Button>}\n                filter={Filter}\n                action=\"/system/user/lists\"\n            >\n                <Column title=\"ID\" dataIndex=\"id\"/>\n                <Column title=\"用户名\" dataIndex=\"username\"/>\n                <Column title=\"最后登录ip\" dataIndex=\"last_login_ip\"/>\n                <Column title=\"最后登录时间\" dataIndex=\"last_login_time\"/>\n                <Column title=\"创建时间\" dataIndex=\"create_time\"/>\n                <Column title=\"状态\" dataIndex=\"status\" render={status => (\n                    <FieldMap map={this.state.userStatus} value={status}>未知({status})</FieldMap>\n                )}/>\n                <Column title=\"用户组\" key=\"group\" render={(text, row: object) => {\n                    const content = function () {\n                        if (row['userGroup'].length < 1) {\n                            return \"暂无\"\n                        }\n                        return row['userGroup'].map((item) => {\n                            return <div key={item.id}>{item.id}:{item.name}</div>\n                        })\n                    }\n                    return (\n                        <Popover content={content()}>\n                            <Button size=\"small\">用户组({row['userGroup'].length})</Button>\n                        </Popover>\n                    )\n                }}/>\n                <Column title=\"操作\" key=\"op\" render={(text, row: object) => (\n                    <div>\n                        <Button type=\"primary\" size=\"small\" onClick={() => this.edit(row)}\n                                style={{marginRight: \"8px\"}}>编辑</Button>\n                        <Button type=\"danger\" size=\"small\" onClick={() => this.remove(row)}>删除</Button>\n                    </div>\n                )}/>\n            </TableLists>\n        )\n    }\n}\n\nexport default User;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Modal, Form} from 'antd';\nimport {FormComponentProps} from \"antd/es/form\";\nimport request from \"src/utils/request\";\n\ninterface props {\n    action: string\n    form: React.ComponentType\n    formProps: object\n    title: string\n    width?:number\n    okText?: string\n    onClose: () => void\n    onCancel: () => void\n    onSuccess: (response) => void\n    onFailure: (response) => void\n}\n\n\nclass ModalBlock extends React.Component<props> {\n    static defaultProps = {\n        okText: \"提交\",\n        width:600,\n        onCancel: () => {\n        },\n        onSuccess: (response) => {\n        },\n        onFailure: (response) => {\n        },\n    }\n\n    state = {visible:true}\n\n    formRef: object | null = null\n\n    constructor(props) {\n        super(props)\n        this.onOk = this.onOk.bind(this)\n        this.onCancel = this.onCancel.bind(this)\n        this.afterClose = this.afterClose.bind(this)\n    }\n\n    onOk() {\n        if (this.formRef) {\n            const {form} = this.formRef['props'];\n            form.validateFields((err, values) => {\n                if (!err) {\n                    request(this.props.action).data(values).success((response) => {\n                        this.props.onSuccess(response)\n                        this.props.onClose()\n                    }).error((response)=>{\n                        this.props.onFailure(response)\n                    }).post()\n                }\n            });\n        }\n    }\n\n    onCancel() {\n        this.setState({visible:false})\n    }\n\n    afterClose(){\n        this.props.onClose()\n    }\n\n    render() {\n        const F = Form.create()(this.props.form)\n        return (\n            <Modal\n                width={this.props.width}\n                visible={this.state.visible}\n                title={this.props.title}\n                okText={this.props.okText}\n                onCancel={this.onCancel}\n                onOk={this.onOk}\n                afterClose={this.afterClose}\n            >\n                <F {...this.props.formProps} wrappedComponentRef={ref => this.formRef = ref}/>\n            </Modal>\n        )\n    }\n}\n\ninterface optionInterface {\n    title: string\n    width?:number\n    okText?: string\n    onCancel?: () => void  // 操作取消\n    onSuccess?: (response) => void // 操作成功\n    onFailure?: (response) => void // 操作失败\n}\n\nfunction render(props: any, node) {\n    ReactDOM.render(<ModalBlock {...props} />, node);\n}\n\nfunction destroy(node) {\n    const unmountResult = ReactDOM.unmountComponentAtNode(node);\n    if (unmountResult && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n\nexport default function (action: string, form: React.ComponentType<FormComponentProps|any>, formProps: object, options: optionInterface) {\n    const div = document.createElement('div');\n    document.body.appendChild(div);\n    const onClose = function () {\n        destroy(div)\n    }\n    render({...options, action, form, formProps, onClose}, div)\n}\n"],"sourceRoot":""}